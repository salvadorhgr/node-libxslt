node-libxslt
============

[![Build status](https://travis-ci.org/theNBS/node-libxslt.svg?branch=master)](https://travis-ci.org/theNBS/node-libxslt)

Node.js bindings for [libxslt](http://xmlsoft.org/libxslt/) compatible with [libxmljs](https://github.com/libxmljs/libxmljs).

This fork restores the dependency of node-libxslt on [libxmljs](https://github.com/libxmljs/libxmljs) rather than
the Multi Threaded fork ([libxmljs-mt](https://github.com/gagern/libxmljs)). This was for a couple of reasons:

1. libxmljs-mt appears to no longer be manintaned, wereas libxmljs is - as such it compiles with Node.js v12.
2. In our usage of the library - we don't need any of the async operations
3. We don't have very complex XSLT stylesheets - and none that include other XSLT's

This fork keeps the callback implementation of `parse` and `apply` but both have been refactored to call the
synchronous libxmljs methods.

The fork should compile successfully on Node 8 -> 13.

Installation
------------

	npm install libxslt

From source:

    git clone https://github.com/albanm/node-libxslt.git
      git submodule update --init
      npm install
      npm test

Basic usage
-----------

```js
var libxslt = require('libxslt');

libxslt.parse(stylesheetString, function(err, stylesheet){
  var params = {
    MyParam: 'my value'
  };

  // 'params' parameter is optional
  stylesheet.apply(documentString, params, function(err, result){
    // err contains any error from parsing the document or applying the stylesheet
    // result is a string containing the result of the transformation
  });  
});
```

Libxmljs integration
--------------------

Node-libxslt depends on [libxmljs](https://github.com/libxmljs/libxmljs) in the same way that [libxslt](http://xmlsoft.org/libxslt/) depends on [libxml](http://xmlsoft.org/). This dependancy makes possible to bundle and to load in memory libxml only once for users of both libraries.

The libxmljs module required by node-libxslt is exposed as ```require('libxslt').libxmljs```. This prevents depending on libxmljs twice which is not optimal and source of weird bugs.

It is possible to work with libxmljs documents instead of strings:

```js
var libxslt = require('libxslt');
var libxmljs = libxslt.libxmljs;

var stylesheetObj = libxmljs.parseXml(stylesheetString, { nocdata: true });
var stylesheet = libxslt.parse(stylesheetObj);

var document = libxmljs.parseXml(documentString);
stylesheet.apply(document, function(err, result){
  // result is now a libxmljs document containing the result of the transformation
});

```

This is only useful if you already needed to parse a document before applying the stylesheet for previous manipulations.
Or if you wish to be returned a document instead of a string for ulterior manipulations.
In these cases you will prevent extraneous parsings and serializations.	

Includes
--------

XSL includes are supported but relative paths must be given from the execution directory, usually the root of the project.

Includes are resolved when parsing the stylesheet by libxml. Therefore the parsing task becomes IO bound, which is why you should not use synchronous parsing when you expect some includes.

Benchmarking
-------------

A small benchmark is available in the project. It uses always the same small transformation a few thousand times.

To run it use:

    node benchmark.js

Environment compatibility
-------------------------

For now 64bits linux and 32bits windows are confirmed. Other environments are probably ok, but not checked. Please report an issue if you encounter some difficulties.

Node-libxslt depends on [node-gyp](https://github.com/TooTallNate/node-gyp), you will need to meet its requirements. This can be a bit painful mostly for windows users. The node-gyp version bundled in your npm will have to be greater than 0.13.0, so you might have to follow [these instructions to upgrade](https://github.com/TooTallNate/node-gyp/wiki/Updating-npm's-bundled-node-gyp). There is no system dependancy otherwise, libxslt is bundled in the project.

API Reference
=============
{{#module name="libxslt"~}}
  {{>body~}}
  {{>members~}}
{{/module~}}

*documented by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown)*.
